apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.network/nw_backends: "true"
        io.kompose.network/nw_frontend: "true"
        io.kompose.service: web
    spec:
      containers:
        - args:
            - bash
            - -c
            - python manage.py migrate --no-input && python manage.py collectstatic --no-input && gunicorn --bind 0.0.0.0:8000 backend.wsgi:application
          env:
            - name: CELERY_BACKEND
              value: redis://redis:6379/0
            - name: CELERY_BROKER
              value: redis://redis:6379/0
            - name: DEBUG
              value: "0"
          image: web
          name: web
          ports:
            - containerPort: 8000
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: web-claim0
            - mountPath: /app/staticfiles
              name: staticfiles
      restartPolicy: Always
      volumes:
        - name: web-claim0
          persistentVolumeClaim:
            claimName: web-claim0
        - name: staticfiles
          persistentVolumeClaim:
            claimName: staticfiles
status: {}

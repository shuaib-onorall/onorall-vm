
#============ steps to run : otherwise it raise an exception becuase our web container not up and other container uses its environment variables 
# docker-compose run web
# docker-compose up --build


version: "3"

services:

  db:
    image: mongo
    container_name: mongo_db_container

    ports :
      - 27017:27017

    volumes:
      - ./mongodata:/var/lib/mongodb/data
  
    environment : 
    
      - MONGO_INITDB_ROOT_USERNAME=amitsingh
      - MONGO_INITDB_ROOT_PASSWORD=onorall
      - MONGO_INITDB_DATABASE=myonorall
      - MONGO_INITDB_USERNAME=amitsingh
      - MONGO_INITDB_PASSWORD=onorall

  web:
      build: .
      container_name: web
      
      command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application

      
      volumes:
        - .:/app

      ports:
        - "8080:8080"
      image: web_image

      environment:
        - DEBUG=1
        - CELERY_BROKER=redis://redis:6379/0
        - CELERY_BACKEND=redis://redis:6379/0
      # env_file:
      #   - ./venv
      depends_on:
        - db
        - redis


  celery:

    build: .
    container_name: celery
    command: celery -A backend worker -l INFO   # if any erro then = celery worker --app=app --loglevel=info

    volumes:
      - .:/app

    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0

    depends_on:
      - web
      - redis

  redis:
    image: "redis:alpine"

volumes:
  mongodata:



#============ steps to run : otherwise it raise an exception becuase our web container not up and other container uses its environment variables
# docker-compose run web
# docker-compose up








# version: "3"

# services:

#   db:
#     image: mongo

#     ports :
#       - 27017:27017

#     volumes:
#       - ./data/db:/var/lib/mongodb/data
  
#     environment : 
    
#       - MONGO_INITDB_ROOT_USERNAME=amitsingh
#       - MONGO_INITDB_ROOT_PASSWORD=onorall
#       - MONGO_INITDB_DATABASE=myonorall
#       - MONGO_INITDB_USERNAME=amitsingh
#       - MONGO_INITDB_PASSWORD=onorall

#   web:
#       build: .
#       container_name: django_web_container
      
#       command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application

      
#       volumes:
#         - .:/code

#       ports:
#         - "8080:8080"
#       image: web_image
      
#       # env_file:
#       #   - ./venv

#       depends_on:
#         - db



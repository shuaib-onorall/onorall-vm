
#============ steps to run : otherwise it raise an exception becuase our web container not up and other container uses its environment variables 
# docker-compose run web
# docker-compose up --build


version: "3"

services:

  db:
    image: mongo
    container_name: mongo_db_container

    ports :
      - 27017:27017

    volumes:
      - ./mongodata:/var/lib/mongodb/data
  
    environment : 
    
      - MONGO_INITDB_ROOT_USERNAME=amitsingh
      - MONGO_INITDB_ROOT_PASSWORD=onorall
      - MONGO_INITDB_DATABASE=myonorall
      - MONGO_INITDB_USERNAME=amitsingh
      - MONGO_INITDB_PASSWORD=onorall

  web:
      build: .
      container_name: web
      
      command: >
         bash -c "python manage.py makemigrations --no-input &&
         python manage.py migrate --no-input &&
         python manage.py collectstatic --no-input &&
         daphne -b 0.0.0.0 -p 8000 backend.asgi:application"

      
      volumes:
        - .:/app
        - static_files:/app/static_files

      # ports:
      #   - "8000:8000"

      expose:
        - 8000
      # use one port or expose


      image: web

      environment:
        - DEBUG=1
        - CELERY_BROKER=redis://redis:6379/0
        - CELERY_BACKEND=redis://redis:6379/0


        # not sure working or not
        - CHANNEL_LAYERS= {  'default' = {  'BACKEND' = 'channels_redis.core.RedisChannelLayer'    'CONFIG' = { "hosts" = [('localhost', 6379)],   }, }, 'ROUTING' = 'ws.routing.application',  }                       
                          

      # env_file:
      #   - ./venv
      depends_on:
        - db
        - redis


  celery:

    build: .
    container_name: celery
    command: celery -A backend worker -l INFO   # if any erro then = celery worker --app=app --loglevel=info

    volumes:
      - .:/app

    environment:
      - DEBUG=1
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0

    depends_on:
      - web
      - redis

  redis:
    image: "redis:alpine"
    


  nginx:
    build: ./nginx
    image: nginx:latest
    # volumes:
    #   - static:/static
    ports:
      - 80:80

    volumes:
      - ./nginx/default.conf/:/etc/nginx/conf.d/default.conf/
      - static_files:/home/app/static_files
      


    depends_on:
      - web

volumes:
  mongodata:
  static_files:



#============ steps to run : otherwise it raise an exception becuase our web container not up and other container uses its environment variables
# docker-compose run web
# docker-compose up








# version: "3"

# services:

#   db:
#     image: mongo

#     ports :
#       - 27017:27017

#     volumes:
#       - ./data/db:/var/lib/mongodb/data
  
#     environment : 
    
#       - MONGO_INITDB_ROOT_USERNAME=amitsingh
#       - MONGO_INITDB_ROOT_PASSWORD=onorall
#       - MONGO_INITDB_DATABASE=myonorall
#       - MONGO_INITDB_USERNAME=amitsingh
#       - MONGO_INITDB_PASSWORD=onorall

#   web:
#       build: .
#       container_name: django_web_container
      
#       command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application

      
#       volumes:
#         - .:/code

#       ports:
#         - "8080:8080"
#       image: web_image
      
#       # env_file:
#       #   - ./venv

#       depends_on:
#         - db















# #---------------29 july
# version: "3"

# services:

#   db:
#     image: mongo
#     container_name: mongo_db_container

#     ports :
#       - 27017:27017

#     volumes:
#       - ./mongodata:/var/lib/mongodb/data
  
#     environment : 
    
#       - MONGO_INITDB_ROOT_USERNAME=amitsingh
#       - MONGO_INITDB_ROOT_PASSWORD=onorall
#       - MONGO_INITDB_DATABASE=myonorall
#       - MONGO_INITDB_USERNAME=amitsingh
#       - MONGO_INITDB_PASSWORD=onorall

#   web:
#       build: .
#       container_name: web
      
#       command: >
#          bash -c "python manage.py makemigrations --no-input &&
#          python manage.py migrate --no-input &&
#          python manage.py collectstatic --no-input &&
#          daphne -b 0.0.0.0 -p 8000 backend.asgi:application"

      
#       volumes:
#         - .:/app

#       ports:
#         - "8000:8000"
#       image: web

#       environment:
#         - DEBUG=1
#         - CELERY_BROKER=redis://redis:6379/0
#         - CELERY_BACKEND=redis://redis:6379/0


#         # not sure working or not
#         - CHANNEL_LAYERS= {  'default' = {  'BACKEND' = 'channels_redis.core.RedisChannelLayer'    'CONFIG' = { "hosts" = [('localhost', 6379)],   }, }, 'ROUTING' = 'ws.routing.application',  }                       
                          

#       # env_file:
#       #   - ./venv
#       depends_on:
#         - db
#         - redis


#   celery:

#     build: .
#     container_name: celery
#     command: celery -A backend worker -l INFO   # if any erro then = celery worker --app=app --loglevel=info

#     volumes:
#       - .:/app

#     environment:
#       - DEBUG=1
#       - CELERY_BROKER=redis://redis:6379/0
#       - CELERY_BACKEND=redis://redis:6379/0

#     depends_on:
#       - web
#       - redis

#   redis:
#     image: "redis:alpine"
    


#   nginx:
#     build: ./nginx
#     image: nginx:latest
#     volumes:
#       - static:/static
#     ports:
#       - 80:8000
    

#     # volumes:
#     #   - ./nginx/default.conf/:/etc/nginx/conf.d/default.conf/

#     depends_on:
#       - web

# volumes:
#   mongodata:
#   static:
